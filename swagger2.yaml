swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/account/{id}:
    get:
      security:
        - Bearer: []
      tags:
       - User Account Module
      summary: User Account API
      description: API for fetching a user account
      parameters:
        - in: path
          name: id
          description: Account Payload
          required: true
          type: string
      responses:
        '200':
          description: User account retrivied successfully
          schema:
            $ref: '#/definitions/Account'
        '400':
          description: Invalid Fields
        '403':
          description: None Authorized
        '500':
          description: Internal Server Error
  /user/account/{accountId}/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - User Transactions Module
      summary: User Transaction API
      description: API for fetching a user transactions for one month
      parameters:
        - in: path
          name: accountId
          description: Account Payload
          required: true
          type: string
        - in: path
          name: transactionId
          description: Transaction Payload
          required: true
          type: string
      responses:
        '200':
          description: User transactions retrivied successfully
          schema:
            $ref: '#/definitions/TransactionsDetail'
        '400':
          description: Invalid Fields
        '403':
          description: None Authorized
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Transactions Module
      summary: Update Transaction Category and Note
      description: API for updating the category and note of a specific transaction
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: The ID of the account
        - in: path
          name: transactionId
          required: true
          type: string
          description: The ID of the transaction
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields or request
        '403':
          description: Not Authorized
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error   
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Account:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for the account
      created_at:
        type: string
        format: date-time
        description: The date and time when the account was created
      transactions:
        type: array
        description: List of transactions for the current month
        items:
          $ref: '#/definitions/TransactionsDetail'
    required:
      - id
      - created_at
      - transactions
  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
        description: New category of the transaction
      note:
        type: string
        description: New note for the transaction
    required:
      - category
      - note
  TransactionsDetail:
    type: object
    properties:
      transactionId:
        type: string
        description: Unique identifier of the transaction
      amount:
        type: number
        format: float
        description: Amount of the transaction
      description:
        type: string
        description: Description of the transaction
      transaction type:
        type: string
        description: Type of the transaction (debit, credit, etc)
      balance:
        type: number
        format: float
        description: Balance of the account after the transaction
      date:
        type: string
        format: date-time
        description: Date and time of the transaction
      category:
        type: string
        description: Category of the transaction
      note:
        type: string
        description: Note attached to the transaction
    required:
      - transactionId
      - amount
      - description
      - transaction type
      - balance
      - date
      - category
      - note